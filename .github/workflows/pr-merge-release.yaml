name: Release module

on:
  push:
    branches:
      - main
      - '7.0'
      - '7.1'
      - '8.0'
    paths:
      - 'main/**/ChangeLog'
      - 'extra/**/ChangeLog'
      - '!main/**/debian/changelog'
      - '!extra/**/debian/changelog'

permissions:
  contents: write
  id-token: write

env:
  SCRIPT_DETECT: .github/scripts/detect-changes.sh
  SCRIPT_RELEASE_MODULE: .github/scripts/release-module.sh
  ZENTYAL_VERSION: "8.0"

jobs:
  release-changes:
    # if: startsWith(github.event.head_commit.message, 'Merge pull request')
    runs-on: ubuntu-latest
    outputs:
      changed_modules: ${{ steps.detect.outputs.changed_modules }}

    steps:
      # https://github.com/actions/checkout
      - name: Checkout repository
        uses: actions/checkout@v5

      # https://github.com/tj-actions/changed-files
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v47
        with:
          files: |
            extra/**
            main/**

      - name: Get changed modules
        id: detect
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: ${{ env.SCRIPT_DETECT }} changed-modules

      - name: Commit, tag and release changes
        env:
          MODULES: ${{ steps.detect.outputs.changed_modules }}
          GH_TOKEN: ${{ github.token }}
        run: |
          echo "Creating tags and releases for modules: $MODULES"
          ${{ env.SCRIPT_RELEASE_MODULE }} "$MODULES"

  generate-packages:
    needs: release-changes
    runs-on: ubuntu-latest
    env:
      MODULES: ${{ needs.release-changes.outputs.changed_modules }}

    steps:
      - name: Packages to generate
        run: |
          echo "Generating packages for modules: $MODULES"

      # https://github.com/aws-actions/configure-aws-credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v5.1.0
        with:
          audience: sts.amazonaws.com
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_OIDC }}

      # https://docs.aws.amazon.com/cli/latest/reference/ecs/run-task.html
      # https://docs.aws.amazon.com/cli/latest/reference/ecs/wait/tasks-stopped.html
      - name: Launch ECS Fargate Task
        run: |
          set -euo pipefail
          TASK_ARN=$(aws ecs run-task \
            --cluster ${{ secrets.ECS_CLUSTER_NAME }} \
            --launch-type FARGATE \
            --network-configuration "awsvpcConfiguration={subnets=[${{ secrets.SUBNET_ID }}],securityGroups=[${{ secrets.SECURITY_GROUP_ID }}],assignPublicIp=ENABLED}" \
            --task-definition ${{ secrets.TASK_DEFINITION_NAME }}:${{ secrets.TASK_DEFINITION_VERSION }} \
            --overrides "{
              \"containerOverrides\": [{
                \"name\": \"${{ secrets.CONTAINER_NAME }}\",
                \"environment\": [
                  {\"name\": \"BRANCH\", \"value\": \"${GITHUB_REF_NAME}\"},
                  {\"name\": \"MODULES\", \"value\": \"${MODULES}\"}
                ]
              }]
            }" | jq -r '.tasks[0].taskArn')

          echo "Waiting for ECS task '${TASK_ARN}' to stop..."
          aws ecs wait tasks-stopped --cluster ${{ secrets.ECS_CLUSTER_NAME }} --tasks ${TASK_ARN}

  release-packages:
    needs: generate-packages
    runs-on: ubuntu-latest

    steps:
      - run: |
          echo "Publishing packages."
